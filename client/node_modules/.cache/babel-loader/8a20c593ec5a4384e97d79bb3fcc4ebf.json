{"ast":null,"code":"import _objectSpread from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Form from \"../components/Form\";\nimport Search from \"../components/Search\";\nimport Nav from \"../components/Nav\"; // import Footer from \"../components/Footer\"\n\nvar SearchBooks = /*#__PURE__*/function (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      search: \"Pride & Prejudice\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getBooks = function () {\n      API.getBooks(_this.state.q).then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          books: [],\n          message: \"No New Books Found, Try a Different Query\"\n        });\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBooks(_this.state.search).then(function (res) {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          var results = res.data.items; //map through array\n\n          results = results.map(function (result) {\n            //store each book in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink,\n              buttonText: \"Save Book\"\n            };\n            return result;\n          }); // reset state\n\n          _this.setState({\n            books: results,\n            error: \"\"\n          });\n        }\n      }).catch(function (err) {\n        return _this.setState({\n          error: err.items\n        });\n      });\n    };\n\n    _this.handleSavedButton = function (event) {\n      // console.log(event)\n      event.preventDefault();\n      console.log(_this.state.books);\n      console.log(event.target.id);\n\n      var savedBooks = _this.state.books.filter(function (book) {\n        return book.id === event.target.id;\n      });\n\n      savedBooks = savedBooks[0];\n      console.log(savedBooks);\n      API.saveBook(savedBooks).then(_this.setState({\n        books: _this.state.books.map(function (book) {\n          if (book.id === event.target.id) {\n            return _objectSpread({}, book, {\n              buttonText: \"Saved!\"\n            });\n          } else {\n            return book;\n          }\n        })\n      })).catch(function (err) {\n        return console.log(\"ERROR\", err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        size: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        books: this.state.books,\n        handleSavedButton: this.handleSavedButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/danio/Documents/Bootcamp/Class/Homework/Book_Search/client/src/pages/Search.js"],"names":["React","Component","API","Jumbotron","Container","Row","Col","Form","Search","Nav","SearchBooks","state","search","books","error","message","handleInputChange","event","target","name","value","setState","getBooks","q","then","res","data","catch","err","console","log","handleFormSubmit","preventDefault","getGoogleSearchBooks","items","Error","results","map","result","key","id","title","volumeInfo","author","authors","description","image","imageLinks","thumbnail","link","infoLink","buttonText","handleSavedButton","savedBooks","filter","book","saveBook"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Form from \"../components/Form\";\nimport Search from \"../components/Search\";\nimport Nav from \"../components/Nav\";\n// import Footer from \"../components/Footer\"\n\nclass SearchBooks extends Component {\n  //initial state\n  state = {\n    search: \"Pride & Prejudice\",\n    books: [],\n    error: \"\",\n    message: \"\",\n  };\n\n  //function for search bar\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => {\n        console.log(err)\n        this.setState({\n          books: [],\n          message: \"No New Books Found, Try a Different Query\"\n        })\n      }\n      );\n  };\n\n  //function for submit button on search form\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    // once it clicks it connects to the google book api with the search value\n    API.getGoogleSearchBooks(this.state.search)\n      .then((res) => {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          let results = res.data.items;\n          //map through array\n          results = results.map((result) => {\n            //store each book in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink,\n              buttonText: \"Save Book\"\n            };\n            return result;\n          });\n          // reset state\n          this.setState({ books: results, error: \"\" });\n        }\n      })\n      .catch((err) => this.setState({ error: err.items }));\n  };\n\n  handleSavedButton = (event) => {\n    // console.log(event)\n    event.preventDefault();\n    console.log(this.state.books);\n    console.log(event.target.id);\n    let savedBooks = this.state.books.filter(\n      (book) => book.id === event.target.id\n    );\n    savedBooks = savedBooks[0];\n    console.log(savedBooks);\n    API.saveBook(savedBooks)\n      .then(this.setState({ books: this.state.books.map(book=>{\n        if (book.id === event.target.id){\n          return {\n            ...book, buttonText: \"Saved!\"\n          }\n        } else {\n          return book;\n        }\n      })\n     }))\n      .catch((err) => console.log(\"ERROR\", err));\n  };\n  render() {\n    return (\n      <>\n      <Nav/>\n        <Jumbotron/>\n        <Container>\n          <Row>\n            <Col size=\"12\">\n              <Form\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <br></br>\n        <Container>\n          <Search\n            books={this.state.books}\n            handleSavedButton={this.handleSavedButton}\n          />\n        </Container>\n        {/* <Footer/> */}\n      </>\n    );\n  }\n}\n\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}